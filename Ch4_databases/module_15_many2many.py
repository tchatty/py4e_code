import json
import sqlite3

#def worked_example():
conn = sqlite3.connect('rosterdb1.sqlite')
cur = conn.cursor() #cursor is like the file handle

cur.executescript('''
    DROP TABLE IF EXISTS User;
    DROP TABLE IF EXISTS Member;
    DROP TABLE IF EXISTS Course;
    
    CREATE TABLE User (
        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
        name TEXT UNIQUE
    );
    CREATE TABLE Course (
        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
        title TEXT UNIQUE
    );
    CREATE TABLE Member (
        user_id INTEGER,
        course_id INTEGER,
        role INTEGER,
        PRIMARY KEY (user_id, course_id)
    )
''')

fname = input('Enter file name: ')
if len(fname)<1:
    fname = 'roster_data.json'
str_data = open(fname).read()
json_data = json.loads(str_data)

for entry in json_data:
    name = entry[0]
    title = entry[1]
    role = entry[2]
    print((name, title, role))

    cur.execute('''INSERT OR IGNORE INTO User(name)
    VALUES(?)''', (name,)) #makes sure that a user is only inserted once
    cur.execute('SELECT id FROM User WHERE name = ?',(name,)) #extracts the autogenerated ID
    user_id = cur.fetchone()[0] #assigns the id from User table to the user_id in Member table

    cur.execute('''INSERT OR IGNORE INTO Course(title)
    VALUES(?)''', (title,))
    cur.execute('SELECT id FROM Course WHERE title = ?',(title,))
    course_id = cur.fetchone()[0]

    #cur.execute('''INSERT OR IGNORE INTO Member(role) VALUES(?)''', (role,))
    cur.execute('''INSERT OR REPLACE INTO Member(user_id, course_id, role) VALUES(?,?,?)''',
                (user_id, course_id, role))
    conn.commit()

#worked_example()
